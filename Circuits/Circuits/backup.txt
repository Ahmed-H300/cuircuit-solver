////////////////Ahmed hany
	//Component* searcher(string x)
	//{
	//	Component* comp = NULL;
	//	for (int i = 0; i < counter; i++)
	//	{
	//		string name = complist[i]->get_name();
	//		if ((name.compare(x) == 0))
	//		{
	//			comp = complist[i];
	//		}
	//	}
	//	return comp;
	//}

	//////////////////////////////////////Ahmed hany
	/////////////////////hany
	//int num_non_sim_nodes = 3;
	//int num = num_non_sim_nodes - 1;
	//Node* arr[2] = { 1,2 };
	////Eigen::MatrixXd G(num, num);
	//Eigen::MatrixXcd m(num, num);
	//for (int i = 0; i < num; i++)
	//{
	//	for (int j = 0; j < num; j++)
	//	{
	//		m(i, j).real(0);
	//		m(i, j).imag(0);
	//	}
	//}
	//Eigen::MatrixXcd I(1,num);
	///*m(0, 0).real(3);
	//m(0, 0).imag(5);
	//m(1, 0).real(3);
	//m(1, 0).imag(5);
	//m(2, 0).real(3);
	//m(2, 0).imag(5);
	//m(2, 2).real(3);
	//m(2, 2).imag(5);
	//cout << m;*/
	//for (int j = 0; j < num; j++)
	//{
	//	for (int k = 0; k < num; k++)
	//	{
	//		complex <double> Admittance_s(0, 0);
	//		complex <double> Admittance_d(0, 0);
	//		for (int i = 0; i < counter; i++)
	//		{
	//			Component* comp = complist[i];
	//			Resistance* resistance = dynamic_cast<Resistance*>(comp);
	//			Inductor* inductor = dynamic_cast<Inductor*>(comp);
	//			Capacaitor* capacaitor = dynamic_cast<Capacaitor*>(comp);
	//			if (resistance != NULL)
	//			{
	//				if ((resistance->get_node1() == arr[k]) || (resistance->get_node2() == arr[k]))
	//				{
	//					complex <double> r;
	//					r = 1.0 / resistance->get_Impedance();
	//					Admittance_s += r;
	//				}
	//				if ((resistance->get_node1() == arr[j]) && (resistance->get_node2() == arr[k]))
	//				{
	//					complex <double> r;
	//					r = 1.0 / resistance->get_Impedance();
	//					Admittance_d += r;
	//				}
	//			}
	//			else if (inductor != NULL)
	//			{
	//				if ((inductor->get_node1() == arr[k]) || (inductor->get_node2() == arr[k]))
	//				{
	//					complex <double> in;
	//					in = inductor->get_Admittance();
	//					Admittance_s += in;
	//				}
	//				if ((inductor->get_node1() == arr[j]) && (inductor->get_node2() == arr[k]))
	//				{
	//					complex <double> r;
	//					r = 1.0 / inductor->get_Impedance();
	//					Admittance_d += r;
	//				}
	//			}
	//			else if (capacaitor != NULL)
	//			{
	//				if ((capacaitor->get_node1() == arr[k]) || (capacaitor->get_node2() == arr[k]))
	//				{
	//					complex <double> ca;
	//					ca = capacaitor->get_Admittance();
	//					Admittance_s += ca;
	//				}
	//				if ((capacaitor->get_node1() == arr[j]) && (capacaitor->get_node2() == arr[k]))
	//				{
	//					complex <double> r;
	//					r = 1.0 / capacaitor->get_Impedance();
	//					Admittance_d += r;
	//				}

	//			}
	//		}
	//		if (j == k)
	//		{
	//			m(k, k) = Admittance_s;
	//		}
	//		else
	//		{
	//			m(j, k) = -Admittance_d;
	//		}
	//	}
	//}
	////////////////

	///////////////////////////////////////Ahmed hany
	//int num_non_sim_nodes = 3;
	//int num = num_non_sim_nodes - 1;
	//Node n1, n2;
	//Node* arr[2] = { &n1,&n2 };
	////Eigen::MatrixXd G(num, num);
	//Eigen::MatrixXcd m(num, num);
	//for (int i = 0; i < num; i++)
	//{
	//	for (int j = 0; j < num; j++)
	//	{
	//		m(i, j).real(0);
	//		m(i, j).imag(0);
	//	}
	//}
	//Eigen::MatrixXcd I(num, 1);
	//for (int i = 0; i < num; i++)
	//{
	//	I(i, 1) = 0;
	//}
	///*m(0, 0).real(3);
	//m(0, 0).imag(5);
	//m(1, 0).real(3);
	//m(1, 0).imag(5);
	//m(2, 0).real(3);
	//m(2, 0).imag(5);
	//m(2, 2).real(3);
	//m(2, 2).imag(5);
	//cout << m;*/
	//for (int j = 0; j < num; j++)
	//{
	//	for (int k = 0; k < num; k++)
	//	{
	//		//
	//		//
	//		complex <double> Admittance_s(0, 0);
	//		complex <double> Admittance_d(0, 0);
	//		for (int i = 0; i < comcount; i++)
	//		{
	//			Component* comp = complist[i];
	//			Resistance* resistance = dynamic_cast<Resistance*>(comp);
	//			Inductor* inductor = dynamic_cast<Inductor*>(comp);
	//			Capacaitor* capacaitor = dynamic_cast<Capacaitor*>(comp);
	//			if (resistance != NULL)
	//			{
	//				if ((resistance->get_node1() == arr[k]) || (resistance->get_node2() == arr[k]))
	//				{
	//					complex <double> r;
	//					r = 1.0 / resistance->get_Impedance();
	//					Admittance_s += r;
	//				}
	//				if ((resistance->get_node1() == arr[j]) && (resistance->get_node2() == arr[k]))
	//				{
	//					complex <double> r;
	//					r = 1.0 / resistance->get_Impedance();
	//					Admittance_d += r;
	//				}
	//			}
	//			else if (inductor != NULL)
	//			{
	//				if ((inductor->get_node1() == arr[k]) || (inductor->get_node2() == arr[k]))
	//				{
	//					complex <double> in;
	//					in = inductor->get_Admittance();
	//					Admittance_s += in;
	//				}
	//				if ((inductor->get_node1() == arr[j]) && (inductor->get_node2() == arr[k]))
	//				{
	//					complex <double> r;
	//					r = inductor->get_Admittance();
	//					Admittance_d += r;
	//				}
	//			}
	//			else if (capacaitor != NULL)
	//			{
	//				if ((capacaitor->get_node1() == arr[k]) || (capacaitor->get_node2() == arr[k]))
	//				{
	//					complex <double> ca;
	//					ca = capacaitor->get_Admittance();
	//					Admittance_s += ca;
	//				}
	//				if ((capacaitor->get_node1() == arr[j]) && (capacaitor->get_node2() == arr[k]))
	//				{
	//					complex <double> r;
	//					r = capacaitor->get_Admittance();
	//					Admittance_d += r;
	//				}

	//			}
	//		}
	//		if (j == k)
	//		{
	//			m(k, k) = Admittance_s;
	//		}
	//		else
	//		{
	//			m(j, k) = -Admittance_d;
	//		}
	//	}
	//}
	//for (int j = 0; j < num; j++)
	//{
	//	for (int i = 0; i < comcount; i++)
	//	{
	//		Component* comp = complist[i];
	//		Isrc* current = dynamic_cast<Isrc*>(comp);
	//		if (current != NULL)
	//		{
	//			if (current->get_node1() == arr[j])
	//			{
	//				complex <double> curr = current->getcomplex();
	//				I(j, 1) += curr;

	//			}
	//			if (current->get_node2() == arr[j])
	//			{
	//				complex <double> curr = -current->getcomplex();
	//				I(j, 1) += curr;
	//			}
	//		}
	//	}
	//
	////////////////////////////////////////Ahmed hany

//// ahmed hany